version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    env_file:
      - .env
    image: blockchain-api:latest
    container_name: blockchain-api
    restart: always
    expose:
      - 8080
    environment:
      - LOKI_URL=http://loki:3100
      - LOG_LEVEL=info
    networks:
      - blockchain_net
    depends_on:
      - loki

  nginx:
    image: nginx:alpine
    container_name: blockchain-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - blockchain_net

  loki:
    image: grafana/loki:2.9.0
    container_name: blockchain-loki
    restart: always
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./deploy/loki-config.yaml:/etc/loki/local-config.yaml:ro
    networks:
      - blockchain_net

  promtail:
    image: grafana/promtail:2.9.0
    container_name: blockchain-promtail
    restart: always
    volumes:
      - /var/log:/var/log
      - ./deploy/promtail-config.yaml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - blockchain_net
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: blockchain-grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - blockchain_net
    depends_on:
      - loki

networks:
  blockchain_net:
    driver: bridge

volumes:
  grafana-storage: 